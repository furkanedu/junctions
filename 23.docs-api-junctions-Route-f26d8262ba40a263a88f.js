webpackJsonp([23],{112:function(n,e,a){n.exports=a(1).markdownPostProcessor('<p>Routes are objects which represent a single state of a <a href="%%%SITEPACK_LINK%%%/docs/api/junctions/Junction.md%%%END_SITEPACK_LINK%%%">Junction</a>. To learn more about what Routes are and how they’re used, read <a href="%%%SITEPACK_LINK%%%/docs/introduction/what-you-get-from-junctions.md%%%END_SITEPACK_LINK%%%">What You Get From Junctions</a> and <a href="%%%SITEPACK_LINK%%%/docs/basics/routes.md%%%END_SITEPACK_LINK%%%">Routes</a> in the Junctions Guide.</p>\n<p>Route objects are most commonly used as props of your components. By checking a <a href="%%%SITEPACK_LINK%%%/docs/basics/the-screen-pattern.md%%%END_SITEPACK_LINK%%%">Screen Component</a>’s <code>route</code> prop, you can decide what content that screen should render.</p>\n<p>Routes are also used as a way of referring to arbitrary locations within your application. They can be used in combination with a <code>Converter</code> or <code>LocatedRoute</code> object’s <a href="#locateroutes">locate()</a> method to produce <a href="%%%SITEPACK_LINK%%%/docs/api/junctions/Location.md%%%END_SITEPACK_LINK%%%">Location</a> objects used for navigating.</p>\n<h2 id="route-vs-locatedroute"><a class="header-anchor" href="#route-vs-locatedroute" aria-hidden="true">#</a> Route vs. LocatedRoute</h2>\n<p>There are two types of <code>Route</code> objects.</p>\n<ul>\n<li>Standard routes are created by calling a <code>Junction</code> object’s <a href="%%%SITEPACK_LINK%%%/docs/api/junctions/Junction.md#createroutekey-params-next%%%END_SITEPACK_LINK%%%">createRoute()</a> method.</li>\n<li><code>LocatedRoute</code> objects are returned by calling a <code>Converter</code> object’s <a href="%%%SITEPACK_LINK%%%/docs/api/junctions/Converter.md#routelocation%%%END_SITEPACK_LINK%%%">route()</a> method.</li>\n</ul>\n<p>The difference is that <code>LocatedRoute</code> objects have a <a href="#locateroutes">locate()</a> method, which acts like the <a href="%%%SITEPACK_LINK%%%/docs/api/junctions/Converter.md#locateroutes%%%END_SITEPACK_LINK%%%">similarly named</a> method on <code>Converter</code> but produces a <a href="%%%SITEPACK_LINK%%%/docs/api/junctions/Location.md%%%END_SITEPACK_LINK%%%">Location</a> which is <em>relative</em> to that <code>LocatedRoute</code>.</p>\n<h2 id="properties"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2>\n<ul>\n<li>\n<p><code>key</code> (<em>string</em>)</p>\n<p>They key of the <a href="%%%SITEPACK_LINK%%%/docs/api/junctions/Junction.md%%%END_SITEPACK_LINK%%%">Branch</a> whose format this route follows</p>\n</li>\n<li>\n<p><code>params</code> (<em>object</em>)</p>\n<p>The values of any params which this route holds</p>\n</li>\n<li>\n<p><code>data</code> (<em>object</em>)</p>\n<p>The value of the <code>data</code> property defined on the associated branch in <a href="%%%SITEPACK_LINK%%%/docs/api/junctions/createJunction.md%%%END_SITEPACK_LINK%%%">createJunction</a>, if any</p>\n</li>\n<li>\n<p><code>next</code> (<em><a href="%%%SITEPACK_LINK%%%/docs/api/junctions/Route.md%%%END_SITEPACK_LINK%%%">Route</a> | { [key]: <a href="%%%SITEPACK_LINK%%%/docs/api/junctions/Route.md%%%END_SITEPACK_LINK%%%">Route</a> }</em>)</p>\n<p>The <code>Route</code> object or objects which specify the state of any <code>next</code> junctions on the associated branch</p>\n</li>\n</ul>\n<h4 id="example"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h4>\n<p><code>Route</code> objects are instances of an internal <code>Route</code> or <code>LocatedRoute</code> class, so they may not be represented by plain old JavaScript objects. With this in mind, here is an example of the <em>shape</em> which a <code>Route</code> object may take.</p>\n<pre><code class="language-js"><span class="token punctuation" >{</span>\n  key<span class="token punctuation" >:</span> <span class="token string" >\'Invoices\'</span><span class="token punctuation" >,</span>\n  data<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n    Component<span class="token punctuation" >:</span> InvoicesScreen<span class="token punctuation" >,</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  params<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n    id<span class="token punctuation" >:</span> <span class="token string" >\'15\'</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  next<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n    main<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n      key<span class="token punctuation" >:</span> <span class="token string" >\'Payments\'</span><span class="token punctuation" >,</span>\n      data<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        Component<span class="token punctuation" >:</span> InvoicePaymentsScreen<span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      params<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        order<span class="token punctuation" >:</span> <span class="token string" >\'date\'</span><span class="token punctuation" >,</span>\n        where<span class="token punctuation" >:</span> <span class="token punctuation" >{</span> paid<span class="token punctuation" >:</span> <span class="token boolean" >false</span> <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n\n    modal<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n      key<span class="token punctuation" >:</span> <span class="token string" >\'AddPayment\'</span><span class="token punctuation" >,</span>\n      data<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        Component<span class="token punctuation" >:</span> AddPaymentScreen<span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span>\n</code></pre>\n<h2 id="methods"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2>\n<h3 id="locateroutes"><a class="header-anchor" href="#locateroutes" aria-hidden="true">#</a> locate(…routes)</h3>\n<p><em>This method is only available on <code>LocatedRoute</code> objects – i.e. those created by <code>converter.route()</code>. It is not available on routes created by <code>junction.createRoute()</code>.</em></p>\n<p>Create a new <a href="%%%SITEPACK_LINK%%%/docs/api/junctions/Location.md%%%END_SITEPACK_LINK%%%">Location</a> from the Location of this <a href="%%%SITEPACK_LINK%%%/docs/api/junctions/Route.md%%%END_SITEPACK_LINK%%%">Route</a>, but with <code>next</code> routes replaced by the arguments (or removed entirely in the case of no arguments).</p>\n<h4 id="arguments"><a class="header-anchor" href="#arguments" aria-hidden="true">#</a> Arguments</h4>\n<ul>\n<li>\n<p><code>...routes</code> (<em><a href="%%%SITEPACK_LINK%%%/docs/api/junctions/Route.md%%%END_SITEPACK_LINK%%%">Route</a></em>)</p>\n<p>Up to one <code>Route</code> for each <code>Junction</code> specified on the associated branch’s <code>next</code> Junction</p>\n</li>\n</ul>\n<h4 id="returns"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4>\n<p>(<em><a href="%%%SITEPACK_LINK%%%/docs/api/junctions/Location.md%%%END_SITEPACK_LINK%%%">Location</a></em>) A <code>Location</code> which includes this Route’s <code>Location</code>, and extends it to also correspond to the passed in <code>Route</code> objects</p>\n<h4 id="example-2"><a class="header-anchor" href="#example-2" aria-hidden="true">#</a> Example</h4>\n<p>The <code>locate</code> method of a <code>LocatedRoute</code> is often passed to child components along with the route’s <code>next</code> route. This allows child components to create <code>Location</code> objects linking within the component – without knowing where in the application the component is mounted. For more details, read <a href="%%%SITEPACK_LINK%%%/docs/basics/the-screen-pattern.md%%%END_SITEPACK_LINK%%%">The Screen Pattern</a> in the Junctions Guide.</p>\n')}});